# Project Motivation

Triangle discovery is an important graph mining tool, which is strongly related to more complex mining tasks 
such as dense subgraph discovery, community detection, spam detection and many more.
The problem of triangle listing or triangle counting has been studied well in the literature. 
However, in many important applications, graphs are characterized by uncertainty, which introduces additional difficulties in the mining process.
The edges of these graphs are assigned with a probability value, the higher the probability value, the more probable is that the edge is present in the graph.
In this thesis, we focus on the discovery of the k most probable triangles in uncertain graphs.
We also use probable triangles as a pre-clustering tool to improve the results of uncertain graph clustering algorithms.
We offer a evaluation study based on real-world graphs showing that the proposed techniques are efficient and scale well with respect to the size of the input graph.
We also use a clustering algorithm for uncertain graphs, pkwikcluster, to show the improved results of the pre-clustering technique compared to the bare algorithm.


-------------------------------------------

// Graphframes //

--> pyspark + graphframes


// 1. graphframe_bs.py //

1. Read edge list to Dataframe (source, target, probability)
2. Reorder source and destination of the edges (min, max)
3. Create dataframe that contains only the nodes
4. Create the Graph based on nodesDF and edgesDF (GraphFrames)
5. Keep a subgraph containing all the triangles (using Graphframes utility to find triangles)
6. Create a new column ("Triangle") that contains the name of the triangle
7. Create a new column ("Triangle_Prob") that contains the probability of the triangle
8. Sort the dataframe based on Triangle_Prob
9. Take the first k elements


// 2. graphframe_ex1.py & graphframe_ex1_bv.py //

Λάθος?
Δεν λαμβάνει υπόψιν το θεώρημα 1


// 3. graphframe_ex2.py & graphframe_ex2_bv.py //

Λάθος?
Δεν λαμβάνει υπόψιν το θεώρημα 1


// 4. graphframe_fast.py //




